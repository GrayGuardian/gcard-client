local TimerManager = {}
local this = TimerManager

local TimerModel = require('TimerModel')

-- 临时添加队列 防止检测正式队列时添加产生错误
local timerAddTempList = {}
-- 正式时间队列
local timerList = {}
-- 临时删除队列 防止检测正式队列时删除产生错误
local timerDelTempList = {}

local update = function()
    -- 将临时添加队列放入正式队列中
    for i, timer in pairs(timerAddTempList) do
        if table.exist(timerList, timer) == false then
            table.insert(timerList, timer)
        end
    end
    -- 清空临时添加队列
    timerAddTempList = {}
    -- 更新Timer队列信息
    for k, timer in pairs(timerList) do
        while true do
            -- 通过剩余循环次数判断是否结束 -1为无限循环 不触发
            if timer:getRemainCount() == 0 then
                -- 时钟结束
                this.Out(timer)
            end
            if timer.isOver or timer.isPause then
                -- 时钟结束或暂停，跳过判断
                break
            end
            timer.runTime = timer.runTime + CS.UnityEngine.Time.deltaTime
            timer.cycleRunTime = timer.cycleRunTime + CS.UnityEngine.Time.deltaTime
            if timer:getCycleRemainTime() == 0 then
                -- 当前周期结束 执行周期函数
                timer:call()
            end
            break
        end
    end
    -- 将临时删除队列从正式队列中删除
    for k, timer in pairs(timerDelTempList) do
        timer.isOver = true
        if table.exist(timerList, timer) == true then
            table.del(timerList, timer)
        end
    end
    timerDelTempList = {}
end

EventManager.On(Event.MONO("Update"),update)

--生成时钟
function TimerManager.On(time,this,onTrigger,loopCount)
    local o = TimerModel:new(time,this,onTrigger,loopCount)
    table.insert(timerAddTempList, o)
    return o
end
--停止时钟
function TimerManager.Out(timer)
    if this.Exist(timer) == false then
        return
    end
    timer.isOver = true
    table.insert(timerDelTempList, timer)
end
--开始时钟
function TimerManager.PlayTimer(timer)
    if this.Exist(timer) == false then
        return
    end
    time.isPause = false
end
--暂停时钟
function TimerManager.PauseTimer(timer)
    if this.Exist(timer) == false then
        return
    end
    timer.isPause = true
end
--时钟是否存在
function TimerManager.Exist(timer)
    return (table.exist(timerList, timer) == true or table.exist(timerAddTempList, timer) == true) and
        table.exist(timerDelTempList, timer) == false
end

return TimerManager