-- Generated By protoc-gen-lua Do not Edit
local protobuf = require "protobuf"
local MODEL_PB = require("model_pb")
local DB_PB = require("db_pb")
local TEMPLATE_PB = require("template_pb")
local ERROR_PB = require("error_pb")
local m_table = {}
setmetatable(m_table,{__index = _G})
local _ENV = m_table

local localTable = {}
RPC = protobuf.Descriptor()
localTable.RPC_ROUTER_FIELD = protobuf.FieldDescriptor()
localTable.RPC_ERROR_FIELD = protobuf.FieldDescriptor()
localTable.RPC_CONN_FIELD = protobuf.FieldDescriptor()
localTable.RPC_CONNRET_FIELD = protobuf.FieldDescriptor()
localTable.RPC_TEST_FIELD = protobuf.FieldDescriptor()
localTable.RPC_TESTRET_FIELD = protobuf.FieldDescriptor()
CONN = protobuf.Descriptor()
localTable.CONN_PID_FIELD = protobuf.FieldDescriptor()
localTable.CONN_TOKEN_FIELD = protobuf.FieldDescriptor()
CONNRET = protobuf.Descriptor()
TEST = protobuf.Descriptor()
TESTRET = protobuf.Descriptor()


localTable.RPC_ROUTER_FIELD.name = "router"
localTable.RPC_ROUTER_FIELD.full_name = ".socket.rpc.router"
localTable.RPC_ROUTER_FIELD.number = 1
localTable.RPC_ROUTER_FIELD.index = 0
localTable.RPC_ROUTER_FIELD.label = 2
localTable.RPC_ROUTER_FIELD.has_default_value = false
localTable.RPC_ROUTER_FIELD.default_value = ""
localTable.RPC_ROUTER_FIELD.type = 9
localTable.RPC_ROUTER_FIELD.cpp_type = 9

localTable.RPC_ERROR_FIELD.name = "error"
localTable.RPC_ERROR_FIELD.full_name = ".socket.rpc.error"
localTable.RPC_ERROR_FIELD.number = 20
localTable.RPC_ERROR_FIELD.index = 1
localTable.RPC_ERROR_FIELD.label = 1
localTable.RPC_ERROR_FIELD.has_default_value = false
localTable.RPC_ERROR_FIELD.default_value = nil
localTable.RPC_ERROR_FIELD.message_type = ERROR_PB.CERROR
localTable.RPC_ERROR_FIELD.type = 11
localTable.RPC_ERROR_FIELD.cpp_type = 10

localTable.RPC_CONN_FIELD.name = "conn"
localTable.RPC_CONN_FIELD.full_name = ".socket.rpc.conn"
localTable.RPC_CONN_FIELD.number = 50
localTable.RPC_CONN_FIELD.index = 2
localTable.RPC_CONN_FIELD.label = 1
localTable.RPC_CONN_FIELD.has_default_value = false
localTable.RPC_CONN_FIELD.default_value = nil
localTable.RPC_CONN_FIELD.message_type = CONN
localTable.RPC_CONN_FIELD.type = 11
localTable.RPC_CONN_FIELD.cpp_type = 10

localTable.RPC_CONNRET_FIELD.name = "connRet"
localTable.RPC_CONNRET_FIELD.full_name = ".socket.rpc.connRet"
localTable.RPC_CONNRET_FIELD.number = 51
localTable.RPC_CONNRET_FIELD.index = 3
localTable.RPC_CONNRET_FIELD.label = 1
localTable.RPC_CONNRET_FIELD.has_default_value = false
localTable.RPC_CONNRET_FIELD.default_value = nil
localTable.RPC_CONNRET_FIELD.message_type = CONNRET
localTable.RPC_CONNRET_FIELD.type = 11
localTable.RPC_CONNRET_FIELD.cpp_type = 10

localTable.RPC_TEST_FIELD.name = "test"
localTable.RPC_TEST_FIELD.full_name = ".socket.rpc.test"
localTable.RPC_TEST_FIELD.number = 100
localTable.RPC_TEST_FIELD.index = 4
localTable.RPC_TEST_FIELD.label = 1
localTable.RPC_TEST_FIELD.has_default_value = false
localTable.RPC_TEST_FIELD.default_value = nil
localTable.RPC_TEST_FIELD.message_type = TEST
localTable.RPC_TEST_FIELD.type = 11
localTable.RPC_TEST_FIELD.cpp_type = 10

localTable.RPC_TESTRET_FIELD.name = "testRet"
localTable.RPC_TESTRET_FIELD.full_name = ".socket.rpc.testRet"
localTable.RPC_TESTRET_FIELD.number = 101
localTable.RPC_TESTRET_FIELD.index = 5
localTable.RPC_TESTRET_FIELD.label = 1
localTable.RPC_TESTRET_FIELD.has_default_value = false
localTable.RPC_TESTRET_FIELD.default_value = nil
localTable.RPC_TESTRET_FIELD.message_type = TESTRET
localTable.RPC_TESTRET_FIELD.type = 11
localTable.RPC_TESTRET_FIELD.cpp_type = 10

RPC.name = "rpc"
RPC.full_name = ".socket.rpc"
RPC.nested_types = {}
RPC.enum_types = {}
RPC.fields = {localTable.RPC_ROUTER_FIELD, localTable.RPC_ERROR_FIELD, localTable.RPC_CONN_FIELD, localTable.RPC_CONNRET_FIELD, localTable.RPC_TEST_FIELD, localTable.RPC_TESTRET_FIELD}
RPC.is_extendable = false
RPC.extensions = {}
localTable.CONN_PID_FIELD.name = "pid"
localTable.CONN_PID_FIELD.full_name = ".socket.conn.pid"
localTable.CONN_PID_FIELD.number = 1
localTable.CONN_PID_FIELD.index = 0
localTable.CONN_PID_FIELD.label = 2
localTable.CONN_PID_FIELD.has_default_value = false
localTable.CONN_PID_FIELD.default_value = 0
localTable.CONN_PID_FIELD.type = 5
localTable.CONN_PID_FIELD.cpp_type = 1

localTable.CONN_TOKEN_FIELD.name = "token"
localTable.CONN_TOKEN_FIELD.full_name = ".socket.conn.token"
localTable.CONN_TOKEN_FIELD.number = 2
localTable.CONN_TOKEN_FIELD.index = 1
localTable.CONN_TOKEN_FIELD.label = 2
localTable.CONN_TOKEN_FIELD.has_default_value = false
localTable.CONN_TOKEN_FIELD.default_value = ""
localTable.CONN_TOKEN_FIELD.type = 9
localTable.CONN_TOKEN_FIELD.cpp_type = 9

CONN.name = "conn"
CONN.full_name = ".socket.conn"
CONN.nested_types = {}
CONN.enum_types = {}
CONN.fields = {localTable.CONN_PID_FIELD, localTable.CONN_TOKEN_FIELD}
CONN.is_extendable = false
CONN.extensions = {}
CONNRET.name = "connRet"
CONNRET.full_name = ".socket.connRet"
CONNRET.nested_types = {}
CONNRET.enum_types = {}
CONNRET.fields = {}
CONNRET.is_extendable = false
CONNRET.extensions = {}
TEST.name = "test"
TEST.full_name = ".socket.test"
TEST.nested_types = {}
TEST.enum_types = {}
TEST.fields = {}
TEST.is_extendable = false
TEST.extensions = {}
TESTRET.name = "testRet"
TESTRET.full_name = ".socket.testRet"
TESTRET.nested_types = {}
TESTRET.enum_types = {}
TESTRET.fields = {}
TESTRET.is_extendable = false
TESTRET.extensions = {}

conn = protobuf.Message(CONN)
connRet = protobuf.Message(CONNRET)
rpc = protobuf.Message(RPC)
test = protobuf.Message(TEST)
testRet = protobuf.Message(TESTRET)

return m_table