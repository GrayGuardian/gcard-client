-- 缩写
_G.UE = UnityEngine
_G.UEUI = UE.UI
_G.GameObject = UE.GameObject
_G.Application = UE.Application

_G.class = require('class')

require('utils')

_G.CSFileUtil = FileUtil.Instance
_G.CSEncryptUtil = EncryptUtil.Instance
_G.CSLuaUtil = LuaUtil.Instance

_G.GAME_CONST = require('GAME_CONST')
_G.BROADCAST_CODE = require('BROADCAST_CODE')
_G.Template = require('template')
_G.ERROR_INFO = Template.template_error_info

_G.Middleware = require('middleware')
_G.DownloadFile = require('downloadFile')

_G.pb = require('pb_util'):new()
_G.asset = require('asset_util'):new()
_G.broadcast = require('broadcast_util'):new()
_G.mono = require('mono_util'):new()
_G.timer = require('timer_util'):new()
_G.pool = require('pool_util'):new()
_G.http = require('http_util'):new()

_G.compMgr = require('comp_mgr'):new()
_G.uiMgr = require('ui_mgr'):new()
_G.sceneMgr = require('scene_mgr'):new()

_G.update = require('update_util'):new()

-- Http测试代码
Middleware:new():use(
    function(ctx, next)
        http:send(
            'login',
            {username = 'vsdf123', password = '1djkfls'},
            function(data)
                print('登录成功')
                next()
            end,
            function(data)
                print('出现错误', '>>', data.error.info.code, data.error.info.tip)

                uiMgr:load(
                    'ui_msg',
                    {
                        msg = '网络连接超时，是否重试？' ..
                            '\n' .. data.error.info.id .. '  -  ' .. data.router .. '  -  ' .. data.error.info.tip,
                        btnTitle = '重试',
                        isCloseBtn = false,
                        onClick = function()
                            if (data.cb ~= nil) then
                                data.cb()
                            end
                        end
                    }
                )
            end
        )
        -- next()
    end
):use(
    function(ctx, next)
        http:send(
            'enterArea',
            {aid = 2},
            function(data)
                print('进入区服成功')
                next()
            end,
            function(data)
                print('出现错误', '>>', data.error.info.code, data.error.info.tip)

                uiMgr:load(
                    'ui_msg',
                    {
                        msg = '网络连接超时，是否重试？' ..
                            '\n' .. data.error.info.id .. '  -  ' .. data.router .. '  -  ' .. data.error.info.tip,
                        btnTitle = '重试',
                        isCloseBtn = false,
                        onClick = function()
                            if (data.cb ~= nil) then
                                data.cb()
                            end
                        end
                    }
                )
            end
        )
    end
):use(
    function(ctx, next)
        http:send(
            'enterGame',
            {pid = 'bvdf1450-058b-11ec-988a-a30baafb095f'},
            function(data)
                print('进入游戏成功')
                next()
            end,
            function(data)
                print('出现错误', '>>', data.error.info.code, data.error.info.tip)

                uiMgr:load(
                    'ui_msg',
                    {
                        msg = '网络连接超时，是否重试？' ..
                            '\n' .. data.error.info.id .. '  -  ' .. data.router .. '  -  ' .. data.error.info.tip,
                        btnTitle = '重试',
                        isCloseBtn = false,
                        onClick = function()
                            if (data.cb ~= nil) then
                                data.cb()
                            end
                        end
                    }
                )
            end
        )
    end
):next()

-- Socket测试代码
-- local client = SocketClient('127.0.0.1', 8100)
-- client.OnReceive =
--     client.OnReceive +
--     System.Action_SocketDataPack(
--         function(dataPack)
--             local d = bytesToString(csBytesToLuaBytes(dataPack.Data))
--             local dataPack = pb:decode('socket.rpc', d)
--             local router = dataPack.router
--             local data = dataPack[router]
--             print('接收到数据', router, '>>>', data)
--         end
--     )
-- client:Connect(
--     function()
--         print('连接成功')
--         -- 编辑器环境下停止关闭连接
--         broadcast:on(
--             BROADCAST_CODE.MONO_QUIT,
--             function()
--                 client:Close()
--             end
--         )
--         -- 发送测试数据
--         local data =
--             pb:encode(
--             'socket.rpc',
--             {
--                 router = 'test',
--                 test = {}
--             }
--         )
--         local bytes = luaBytesToCsBytes(stringToBytes(data))
--         client:Send(0x1001, bytes, nil)
--     end,
--     function()
--         print('连接失败')
--     end
-- )
