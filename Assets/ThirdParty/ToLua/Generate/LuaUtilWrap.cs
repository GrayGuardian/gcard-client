//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaUtil), typeof(Singleton<LuaUtil>));
		L.RegFunction("StringToBytes_UTF8", StringToBytes_UTF8);
		L.RegFunction("BytesToString_UTF8", BytesToString_UTF8);
		L.RegFunction("New", _CreateLuaUtil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaUtil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaUtil obj = new LuaUtil();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaUtil.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StringToBytes_UTF8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUtil obj = (LuaUtil)ToLua.CheckObject<LuaUtil>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			byte[] o = obj.StringToBytes_UTF8(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BytesToString_UTF8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaUtil obj = (LuaUtil)ToLua.CheckObject<LuaUtil>(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			string o = obj.BytesToString_UTF8(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

